{
  "All_configurations": {
    "Sistema": [
      {
        "id": 1,
        "title": "Activar Windows",
        "description": "Descarrega l'script d'activació de 'massgrave.dev', i s'executa de forma desatesa'",
        "command": "iwr -uri 'https://raw.githubusercontent.com/massgravel/Microsoft-Activation-Scripts/master/MAS/Separate-Files-Version/Activators/HWID_Activation.cmd' -OutFile \"$env:TEMP\\HWID_Activation.cmd\"; Start-Process -FilePath \"$env:TEMP\\HWID_Activation.cmd\" -ArgumentList \"/HWID /HWID-NoEditionChange\" -Wait",
        "check_command": "if ((Get-Command 'slmgr' -ErrorAction SilentlyContinue) -and ((slmgr /dlv) -match 'HWID')) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "script",
        "revert_command": "",
        "previouslyapplied": false
      }
    ],
    "Experiencia usuari": [
      {
        "id": 1,
        "title": "Disable animations",
        "description": "Disables all the Windows animations by changing a registry key.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Control Panel\\Desktop' -Name 'WindowMetrics' -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Control Panel\\Desktop' -Name 'WindowMetrics').WindowMetrics -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Control Panel\\Desktop' -Name 'WindowMetrics' -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 2,
        "title": "Disable transparency effects",
        "description": "Turns off transparency effects in the Windows UI for better performance.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize' -Name 'EnableTransparency' -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize' -Name 'EnableTransparency').EnableTransparency -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize' -Name 'EnableTransparency' -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 3,
        "title": "Show file extensions",
        "description": "Enables the display of file extensions in File Explorer.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'HideFileExt' -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'HideFileExt').HideFileExt -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'HideFileExt' -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 4,
        "title": "Show hidden files",
        "description": "Reveals hidden files and folders in File Explorer.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'Hidden' -Value 1",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'Hidden').Hidden -eq 1) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'Hidden' -Value 2",
        "previouslyapplied": false
      }
    ],
    "Privadesa": [
      {
        "id": 5,
        "title": "Disable telemetry",
        "description": "Limits data collection by setting the telemetry level to minimum.",
        "command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\DataCollection' -Name 'AllowTelemetry' -Type DWord -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\DataCollection' -Name 'AllowTelemetry').AllowTelemetry -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\DataCollection' -Name 'AllowTelemetry' -Type DWord -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 6,
        "title": "Disable advertising ID",
        "description": "Disables the advertising ID used for ad personalization.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\AdvertisingInfo' -Name 'Enabled' -Type DWord -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\AdvertisingInfo' -Name 'Enabled').Enabled -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\AdvertisingInfo' -Name 'Enabled' -Type DWord -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 7,
        "title": "Disable location services",
        "description": "Turns off location services for all users.",
        "command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location' -Name 'Value' -Value 'Deny'",
        "check_command": "if ((Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location' -Name 'Value').Value -eq 'Deny') { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location' -Name 'Value' -Value 'Allow'",
        "previouslyapplied": false
      }
    ],
    "Debloat": [
      {
        "id": 8,
        "title": "Remove Xbox apps",
        "description": "Removes Xbox-related apps that are bundled with Windows.",
        "command": "Get-AppxPackage *xbox* | Remove-AppxPackage",
        "check_command": "if (!(Get-AppxPackage *xbox*)) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "command",
        "revert_command": "",
        "previouslyapplied": false
      },
      {
        "id": 9,
        "title": "Uninstall OneDrive",
        "description": "Removes Microsoft OneDrive from the system.",
        "command": "taskkill /f /im OneDrive.exe; Start-Process 'C:\\Windows\\SysWOW64\\OneDriveSetup.exe' /uninstall",
        "check_command": "if (!(Get-Process OneDrive -ErrorAction SilentlyContinue)) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "command",
        "revert_command": "Start-Process 'C:\\Windows\\SysWOW64\\OneDriveSetup.exe' -ArgumentList '/install'",
        "previouslyapplied": false
      },
      {
        "id": 10,
        "title": "Remove built-in apps",
        "description": "Removes common built-in apps like Weather, News, and Groove Music.",
        "command": "Get-AppxPackage *windowscommunicationsapps* | Remove-AppxPackage; Get-AppxPackage *bing* | Remove-AppxPackage",
        "check_command": "if (!(Get-AppxPackage *windowscommunicationsapps*) -and !(Get-AppxPackage *bing*)) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "command",
        "revert_command": "",
        "previouslyapplied": false
      }
    ],
    "Rendiment": [
      {
        "id": 11,
        "title": "Disable startup delay",
        "description": "Reduces the delay on startup apps to improve boot speed.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Serialize' -Name 'StartupDelayInMSec' -Type DWord -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Serialize' -Name 'StartupDelayInMSec').StartupDelayInMSec -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Serialize' -Name 'StartupDelayInMSec' -Type DWord -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 12,
        "title": "Disable hibernation",
        "description": "Turns off hibernation to save disk space and reduce background activity.",
        "command": "powercfg -h off",
        "check_command": "if ((powercfg /query SCHEME_CURRENT SUB_SLEEP STANDBYIDLE) -match '0') { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "command",
        "revert_command": "powercfg -h on",
        "previouslyapplied": false
      },
      {
        "id": 13,
        "title": "Disable indexing on C:",
        "description": "Improves performance by turning off search indexing on the main drive.",
        "command": "Stop-Service -Name 'WSearch'; Set-Service -Name 'WSearch' -StartupType Disabled",
        "check_command": "if ((Get-Service WSearch).Status -eq 'Stopped') { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "service",
        "revert_command": "Set-Service -Name 'WSearch' -StartupType Automatic; Start-Service -Name 'WSearch'",
        "previouslyapplied": false
      }
    ],
    "Neteja": [
      {
        "id": 14,
        "title": "Clear temp files",
        "description": "Deletes temporary files to free up space.",
        "command": "Remove-Item -Path $env:TEMP\\\\* -Recurse -Force",
        "check_command": "if (-not (Get-ChildItem -Path $env:TEMP)) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "command",
        "revert_command": "",
        "previouslyapplied": false
      },
      {
        "id": 15,
        "title": "Clear Windows Update cache",
        "description": "Frees up space by removing old Windows Update files.",
        "command": "Stop-Service wuauserv; Remove-Item -Path 'C:\\Windows\\SoftwareDistribution\\Download\\\\*' -Recurse -Force; Start-Service wuauserv",
        "check_command": "if (-not (Get-ChildItem -Path 'C:\\Windows\\SoftwareDistribution\\Download')) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "command",
        "revert_command": "",
        "previouslyapplied": false
      }
    ],
    "Actualitzacions": [
      {
        "id": 16,
        "title": "Pause Windows updates",
        "description": "Temporarily disables Windows updates.",
        "command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU' -Name 'NoAutoUpdate' -Type DWord -Value 1",
        "check_command": "if ((Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU' -Name 'NoAutoUpdate').NoAutoUpdate -eq 1) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU' -Name 'NoAutoUpdate' -Type DWord -Value 0",
        "previouslyapplied": false
      },
      {
        "id": 17,
        "title": "Disable driver updates via Windows Update",
        "description": "Prevents automatic driver updates through Windows Update.",
        "command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\DriverSearching' -Name 'SearchOrderConfig' -Type DWord -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\DriverSearching' -Name 'SearchOrderConfig').SearchOrderConfig -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\DriverSearching' -Name 'SearchOrderConfig' -Type DWord -Value 1",
        "previouslyapplied": false
      }
    ],
    "Altres": [
      {
        "id": 18,
        "title": "Disable Cortana",
        "description": "Removes Cortana from the taskbar and disables it.",
        "command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search' -Name 'AllowCortana' -Type DWord -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search' -Name 'AllowCortana').AllowCortana -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search' -Name 'AllowCortana' -Type DWord -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 19,
        "title": "Disable tips and suggestions",
        "description": "Stops Windows from showing tips, tricks, and suggestions.",
        "command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager' -Name 'SubscribedContent-338389Enabled' -Type DWord -Value 0",
        "check_command": "if ((Get-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager' -Name 'SubscribedContent-338389Enabled').'SubscribedContent-338389Enabled' -eq 0) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager' -Name 'SubscribedContent-338389Enabled' -Type DWord -Value 1",
        "previouslyapplied": false
      },
      {
        "id": 20,
        "title": "Disable lock screen background image",
        "description": "Disables the background image on the lock screen.",
        "command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Personalization' -Name 'NoLockScreen' -Type DWord -Value 1",
        "check_command": "if ((Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Personalization' -Name 'NoLockScreen').NoLockScreen -eq 1) { Write-Output 'true' } else { Write-Output 'false' }",
        "operation_type": "registry",
        "revert_command": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Personalization' -Name 'NoLockScreen' -Type DWord -Value 0",
        "previouslyapplied": false
      }
    ]
  }
}
